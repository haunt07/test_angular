{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAkD;;AAO3C,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;QACnB,SAAI,GAAG,CAAC,CAAC;QACT,cAAS,GAAG,CAAC,CAAC;QACd,WAAM,GAAG,CAAC,CAAC;QACX,cAAS,GAAG,uBAAuB,CAAC;KAgCrC;IA/BC,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAClB,CAAC;IACD,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,QAAQ;QACN,WAAW,CAAC,GAAG,EAAE;YACf,+DAA+D;YAC/D,iCAAiC;YACjC,2BAA2B;YAC3B,0CAA0C;YAC1C,oEAAoE;YACpE,oEAAoE;YACpE,+DAA+D;YAC/D,wEAAwE;YACxE,UAAU;YACV,YAAY;YACZ,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YACzB,IAAI,UAAU,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;YAChD,IAAI,UAAU,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,CAAC;YAChD,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE;YAC3C,IAAI,CAAC,SAAS,GAAG,GAAG,QAAQ,MAAM,UAAU,MAAM,UAAU,EAAE,CAAC;QACjE,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;;wEApCU,YAAY;4FAAZ,YAAY;QCPzB,yEACI;QAAA,uEACI;QAAA,oEACA;QAAA,sEACJ;QAAA,4DAAI;QACR,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,wEAAsB;QAAA,yEAAc;QAAA,4DAAK;QACzC,mEACA;QAAA,uEAAqB;QAAA,wDAAa;QAAA,4DAAI;QAC1C,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,4EACI;QAAA,6EAAkF;QAA3E,oIAAS,cAAU,IAAC;QAA3B,4DAAkF;QAAA,mEACtF;QAAA,4DAAQ;QACZ,4DAAM;QACN,0EACI;QAAA,6EACI;QADG,oIAAS,kBAAc,IAAC;QAC3B,wEAA6D;QAAA,uEACjE;QAAA,4DAAQ;QACZ,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,sEAAI;QAAA,wDAAQ;QAAA,4DAAK;QACrB,4DAAM;QACN,2EACI;QAAA,sEAAI;QAAA,wDAA6B;QAAA,4DAAK;QAC1C,4DAAM;QACV,4DAAM;QACN,8EAAmD;QAA3C,qIAAS,YAAQ,IAAC;QAAyB,qEAAS;QAAA,4DAAS;QACzE,4DAAM;;QAvBuB,2DAAa;QAAb,8EAAa;QAgB1B,2DAAQ;QAAR,yEAAQ;QAGR,0DAA6B;QAA7B,sGAA6B;;6FDtBhC,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;;AAYxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAHJ;YACP,uEAAa;SACd;mIAIU,SAAS,mBARlB,2DAAY,aAGZ,uEAAa;6FAKJ,SAAS;cAVrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACdD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'bootangl';\n  data = 1;\n  constanta = 1;\n  offset = 0;\n  timesData = \"Time will appear here\";\n  toReamur() {\n    this.constanta = 0.8;\n    this.offset = 0;\n  }\n  toFahrenheit() {\n    this.constanta = 9 / 5;\n    this.offset = 32;\n  }\n  toIncr() {\n    this.data++;\n  }\n\n  ngOnInit() {\n    setInterval(() => {\n      //   fetch(\"http://worldtimeapi.org/api/timezone/Asia/Jakarta\")\n      //     .then((res) => res.json())\n      //     .then((resData) => {\n      //       let resTime = resData['datetime']\n      //       let resSeconds = new Date(resTime.toString()).getSeconds();\n      //       let resMinutes = new Date(resTime.toString()).getMinutes();\n      //       let resHours = new Date(resTime.toString()).getHours()\n      //       this.timesData = `${resHours} : ${resMinutes} : ${resSeconds}`;\n      //     });\n      // }, 1000);\n      let resTime = Date.now();\n      let resSeconds = new Date(resTime).getSeconds();\n      let resMinutes = new Date(resTime).getMinutes();\n      let resHours = new Date(resTime).getHours()\n      this.timesData = `${resHours} : ${resMinutes} : ${resSeconds}`;\n    }, 1000);\n  }\n}","<nav class=\"navbar navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">\n        <img src=\"assets/logo.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n        Bootstrap\n    </a>\n</nav>\n<div class=\"jumbotron jumbotron-fluid bg-dark text-white\">\n    <div class=\"container\">\n        <h1 class=\"display-4\">Kamera Jalanan</h1>\n        <hr class=\"my-4 bg-white\">\n        <p class=\"display-2\">{{timesData}}</p>\n    </div>\n</div>\n<div class=\"container\">\n    <div class=\"form-check-inline\">\n        <label class=\"form-check-label\">\n            <input (click)=\"toReamur()\" type=\"radio\" class=\"form-check-input\" name=\"optradio\">Reamur\n        </label>\n    </div>\n    <div class=\"form-check-inline\">\n        <label (click)=\"toFahrenheit()\" class=\"form-check-label\">\n            <input type=\"radio\" class=\"form-check-input\" name=\"optradio\">Fahrenheit\n        </label>\n    </div>\n    <div class=\"row\">\n        <div class=\"row-sm mr-5\">\n            <h1>{{data}}</h1>\n        </div>\n        <div class=\"row-sm\">\n            <h1>{{data * constanta + offset}}</h1>\n        </div>\n    </div>\n    <button (click)=\"toIncr()\" class=\"btn btn-primary\">increment</button>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}