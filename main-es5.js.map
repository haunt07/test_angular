{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","data","constanta","offset","timesData","setInterval","resTime","Date","now","resSeconds","getSeconds","resMinutes","getMinutes","resHours","getHours","toReamur","toFahrenheit","toIncr","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'bootangl';\n  data = 1;\n  constanta = 1;\n  offset = 0;\n  timesData = \"Time will appear here\";\n  toReamur() {\n    this.constanta = 0.8;\n    this.offset = 0;\n  }\n  toFahrenheit() {\n    this.constanta = 9 / 5;\n    this.offset = 32;\n  }\n  toIncr() {\n    this.data++;\n  }\n\n  ngOnInit() {\n    setInterval(() => {\n      //   fetch(\"http://worldtimeapi.org/api/timezone/Asia/Jakarta\")\n      //     .then((res) => res.json())\n      //     .then((resData) => {\n      //       let resTime = resData['datetime']\n      //       let resSeconds = new Date(resTime.toString()).getSeconds();\n      //       let resMinutes = new Date(resTime.toString()).getMinutes();\n      //       let resHours = new Date(resTime.toString()).getHours()\n      //       this.timesData = `${resHours} : ${resMinutes} : ${resSeconds}`;\n      //     });\n      // }, 1000);\n      let resTime = Date.now();\n      let resSeconds = new Date(resTime).getSeconds();\n      let resMinutes = new Date(resTime).getMinutes();\n      let resHours = new Date(resTime).getHours()\n      this.timesData = `${resHours} : ${resMinutes} : ${resSeconds}`;\n    }, 1000);\n  }\n}","<nav class=\"navbar navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">\n        <img src=\"assets/logo.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\">\n        Bootstrap\n    </a>\n</nav>\n<div class=\"jumbotron jumbotron-fluid bg-dark text-white\">\n    <div class=\"container\">\n        <h1 class=\"display-4\">Kamera Jalanan</h1>\n        <hr class=\"my-4 bg-white\">\n        <p class=\"display-2\">{{timesData}}</p>\n    </div>\n</div>\n<div class=\"container\">\n    <div class=\"form-check-inline\">\n        <label class=\"form-check-label\">\n            <input (click)=\"toReamur()\" type=\"radio\" class=\"form-check-input\" name=\"optradio\">Reamur\n        </label>\n    </div>\n    <div class=\"form-check-inline\">\n        <label (click)=\"toFahrenheit()\" class=\"form-check-label\">\n            <input type=\"radio\" class=\"form-check-input\" name=\"optradio\">Fahrenheit\n        </label>\n    </div>\n    <div class=\"row\">\n        <div class=\"row-sm mr-5\">\n            <h1>{{data}}</h1>\n        </div>\n        <div class=\"row-sm\">\n            <h1>{{data * constanta + offset}}</h1>\n        </div>\n    </div>\n    <button (click)=\"toIncr()\" class=\"btn btn-primary\">increment</button>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}